{"version":3,"sources":["components/Player.module.css","components/Game.module.css","components/Guess.module.css","logo.svg","components/Guess.js","components/Player.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Guess","props","className","styles","guess","round","currentRound","result","current","guessPhase","style","color","Player","getResult","player","results","length","game","turn","id","heading","name","numberbox","res","i","isSelected","phase","guesses","push","number","onClick","amount","setNextGuess","setNextResult","rounds","createButtons","points","guessbox","map","r","index","Game","useState","players","setPlayers","setRound","setPhase","setTurn","addToNextGuess","change","find","p","addToNextResult","value","nextPhase","every","nextPhaseRef","useRef","useEffect","handleKeyDown","e","key","exportGameRef","localStorage","removeItem","window","location","document","addEventListener","removeEventListener","console","log","setItem","exportGame","gameJson","getItem","JSON","parse","countRoundPoints","target","gameState","stringify","element","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","some","np","addPlayer","prompt","disabled","playersList","reduce","a","b","phaseButton","Header","gameHeader","gameProgress","Error","gameError","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c0bbb55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"Player_player__3JoQn\",\"turn\":\"Player_turn__2Oivs\",\"heading\":\"Player_heading__3-qsD\",\"guessbox\":\"Player_guessbox__M1sZ7\",\"numberbox\":\"Player_numberbox__1Mfmi\",\"number\":\"Player_number__23NUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameHeader\":\"Game_gameHeader__OrQaB\",\"gameProgress\":\"Game_gameProgress__8mlIl\",\"playersList\":\"Game_playersList__3TVT_\",\"phaseButton\":\"Game_phaseButton__1Euq-\",\"gameError\":\"Game_gameError__KAxTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guess\":\"Guess_guess__ylwjR\",\"guessPhase\":\"Guess_guessPhase__2wCBS\",\"current\":\"Guess_current__PK6Y3\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport styles from \"./Guess.module.css\"\n\n\nexport const Guess = props => {\n    const getContent = () => {\n        if (props.guess == null) return <>-</>\n        if (props.result == null) return props.guess\n        if (props.guess === props.result) return <span style={{color: \"green\"}}>{props.guess}</span>\n        return <span style={{color: \"red\"}}>{props.result} ({props.guess})</span>\n    }\n    return <span className={`${styles.guess} ${props.round == props.currentRound && props.result != null && styles.current}  ${props.round == props.currentRound && props.result == null && styles.guessPhase}`}>{getContent()}</span>\n}","import React from \"react\";\nimport {Guess} from \"./Guess\";\nimport styles from \"./Player.module.css\"\n\nexport const Player = props => {\n\n    const getGuess = round => props.player.guesses.length > round ? props.player.guesses[round] : null\n\n    const getResult = round => props.player.results.length > round ? props.player.results[round] : null\n\n    const onChangeNumber = (amount) => {\n        if (props.game.phase == \"guess\")\n            props.addToNextGuess(props.player.name, amount)\n        else props.addToNextResult(props.player.name, amount)\n    }\n\n    const onSetNumber = (amount) => {\n        if (props.game.phase == \"guess\")\n            props.setNextGuess(props.player.name, amount)\n        else props.setNextResult(props.player.name, amount)\n    }\n\n    const isTurn = () => props.game.turn == props.player.id\n\n    const createButtons = () => {\n        let res = []\n        for (let i = 0; i<= props.game.rounds[props.game.round]; i++) {\n            let isSelected = false;\n            if ((props.game.phase === \"guess\" && props.player.guesses.length == props.game.round + 1 && props.player.guesses[props.game.round] == i) ||\n                (props.game.phase === \"play\" && props.player.results.length == props.game.round + 1 && props.player.results[props.game.round] == i))\n                isSelected = true\n            res.push(<span className={styles.number}\n                           key={i}\n                           data-selected={isSelected}\n                           onClick={() => onSetNumber(i)}>{i}</span>)\n        }\n        return <>{res}</>\n    }\n    return <div className={`${styles.player} ${isTurn() && styles.turn}`}>\n        <div className={styles.heading}>\n            <span>{props.player.name} <span className={styles.numberbox}>{createButtons()}</span>{/*<button onClick={() => onChangeNumber(1)}>+</button><button onClick={() => onChangeNumber(-1)}>-</button>*/}</span>\n            <span>{props.points} Pkt</span>\n        </div>\n        <div className={styles.guessbox}>{props.game.rounds.map((r, index) => <Guess guess={getGuess(index)} result={getResult(index)} round={index} currentRound={props.game.round}/>)}</div>\n    </div>\n}","import React, {useEffect, useRef, useState} from \"react\";\nimport {Player} from \"./Player\";\nimport styles from \"./Game.module.css\"\n\nconst rounds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\n\nexport const Game = props => {\n    const [players, setPlayers] = useState([])\n    const [round, setRound] = useState(-1)\n    const [phase, setPhase] = useState(\"guess\")\n    const [turn, setTurn] = useState(0)\n\n    const addPlayer = (name) => {\n        if (players.some(p => p.name === name)) return;\n        const np = {\n            id: players.length,\n            name: name,\n            guesses: [],\n            results: []\n        }\n        setPlayers(players => [...players, np])\n    }\n\n    const promptNewPlayer = () => {\n        const name = window.prompt(\"Please enter name:\");\n        addPlayer(name)\n    }\n\n    const addToNextGuess = (name, change) => {\n        const player = players.find(p => p.name == name)\n        if (player == null) return\n        if (player.guesses.length < round + 1) player.guesses.push(0)\n        else {\n            if (player.guesses[round] + change > rounds[round] || player.guesses[round] + change < 0) return\n            player.guesses[round] = player.guesses[round] + change\n        }\n        setPlayers(players => players.map(p => {\n            if (p.name === player.name) return player\n            return p\n        }))\n    }\n    const addToNextResult = (name, change) => {\n        const player = players.find(p => p.name == name)\n        if (player == null) return\n        if (player.results.length < round + 1) player.results.push(0)\n        else {\n            if (player.results[round] + change > rounds[round] || player.results[round] + change < 0) return\n            player.results[round] = player.results[round] + change\n        }\n        setPlayers(players => players.map(p => {\n            if (p.name === player.name) return player\n            return p\n        }))\n    }\n\n    const setNextGuess = (name, value) => {\n        const player = players.find(p => p.name == name)\n        if (player == null) return\n        if (value > rounds[round] || value < 0) return\n        if (player.guesses.length < round + 1) player.guesses.push(value)\n        else {\n            player.guesses[round] = value\n        }\n        setPlayers(players => players.map(p => {\n            if (p.name === player.name) return player\n            return p\n        }))\n    }\n\n    const setNextResult = (name, value) => {\n        const player = players.find(p => p.name == name)\n        if (player == null) return\n        if (value > rounds[round] || value < 0) return\n        if (player.results.length < round + 1) player.results.push(value)\n        else {\n            player.results[round] = value\n        }\n        setPlayers(players => players.map(p => {\n            if (p.name === player.name) return player\n            return p\n        }))\n    }\n\n    const nextPhase = () => {\n        if (round < 0) return;\n        if (phase == \"guess\") {\n            if (!players.every(p => p.guesses.length === round + 1))\n                return\n            setPlayers(players => {\n                return players.map(p => {\n                    if (p.results.length < round + 1) p.results.push(0)\n                    return p\n                })\n            })\n            setPhase(\"play\")\n        } else {\n            if (!players.every(p => p.results.length === round + 1))\n                return\n\n            setPlayers(players => {\n                return players.map(p => {\n                    if (p.guesses.length <= round + 1) p.guesses.push(0)\n                    return p\n                })\n            })\n            setPhase(\"guess\")\n            setRound(round => round + 1)\n            if (turn + 1 === players.length) setTurn(0)\n            else setTurn(turn => turn + 1)\n        }\n    }\n\n    const nextPhaseRef = useRef();\n    nextPhaseRef.current = nextPhase\n\n    /**\n     * Initializes the key listeners\n     */\n    useEffect(() => {\n        function handleKeyDown(e) {\n            if (e.key === 'Enter') {\n                nextPhaseRef.current()\n            }\n            else if (e.key === 'F12')\n                exportGameRef.current(\"download\")\n            else if (e.key === 'F2') {\n                localStorage.removeItem(\"game\")\n                window.location = \"/\"\n            }\n        }\n\n        document.addEventListener('keydown', handleKeyDown);\n\n        // Don't forget to clean up\n        return function cleanup() {\n            document.removeEventListener('keydown', handleKeyDown);\n        }\n    }, []);\n\n    /**\n     * Saves the game when the state changes\n     */\n    useEffect(() => {\n        if (turn < 0 || players.length == 0) return\n        console.log(\"saving\")\n        localStorage.setItem(\"game\", exportGame())\n    }, [players, turn, phase, round])\n\n    /**\n     * Load game from Localstorage after reload\n     */\n    useEffect(() => {\n        const gameJson = localStorage.getItem(\"game\")\n        if (gameJson != null) {\n            const game = JSON.parse(gameJson)\n            setPlayers(game.players)\n            setTurn(game.game.turn)\n            setPhase(game.game.phase)\n            setRound(game.game.round)\n        }\n    }, [])\n\n    /**\n     * Counts the points entered in the current round\n     * @param round\n     * @returns {number}\n     */\n    const countRoundPoints = round => {\n        let points = 0;\n        for (const p of players) {\n            if (p.results.length > round) points += p.results[round]\n        }\n        return points\n\n    }\n\n    /**\n     * calculates a players total points\n     * @param player\n     * @returns {string|*}\n     */\n    const calculatePlayerPoints = (player) => {\n        if (player.results.length > player.guesses.length) return \"-\"\n        return player.results.map((r, index) => {\n            const guess = player.guesses[index]\n            const result = player.results[index]\n            if (guess == r)\n                return guess\n            else if (guess === 0)\n                return -result\n            else return -guess\n        }).reduce((a,b) => a+b, 0)\n    }\n\n    const exportGame = (target) => {\n        const gameState = {\n            game: {rounds: rounds, round: round, phase: phase, turn: turn},\n            players: players\n        }\n        var gameJson = JSON.stringify(gameState)\n        if (target == null || target === \"return\") return gameJson\n        else if (target == \"download\") {\n            const element = document.createElement('a');\n            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(gameState)));\n            element.setAttribute('download', \"game.json\");\n\n            element.style.display = 'none';\n            document.body.appendChild(element);\n\n            element.click();\n\n            document.body.removeChild(element);\n        }\n\n    }\n\n\n    const exportGameRef = useRef()\n    exportGameRef.current = exportGame\n\n    return <div>\n        {round === -1 ? <>\n            <button onClick={promptNewPlayer}>Add Player</button>\n            <button onClick={() => setRound(0)} disabled={players.length < 2}>Start</button>\n        </> : <Header game={{rounds: rounds, round: round, phase: phase, turn: turn}}/>}\n        <div className={styles.playersList}>\n            {players.map(p => <Player player={p}\n                                      points={calculatePlayerPoints(p)}\n                                      addToNextGuess={addToNextGuess}\n                                      addToNextResult={addToNextResult}\n                                      setNextGuess={setNextGuess}\n                                      setNextResult={setNextResult}\n                                      game={{rounds: rounds, round: round, phase: phase, turn: turn}}/>)}\n        </div>\n        {players.every(p => p.results.length === round + 1) && countRoundPoints(round) > rounds[round] &&\n        <Error>{`Warnung! Mehr Stiche (${countRoundPoints(round)}) als Karten (${rounds[round]}).`}</Error>}\n        {players.every(p => p.results.length === round + 1) && countRoundPoints(round) < rounds[round] &&\n        <Error>{`Warnung! Weniger Stiche (${countRoundPoints(round)}) als Karten (${rounds[round]}).`}</Error>}\n        {round >= 0 && round < rounds.length && <div className={styles.phaseButton} onClick={nextPhase}>NextRound</div>}\n    </div>\n}\n\nconst Header = props => {\n    return props.game.round < props.game.rounds.length ? <div>\n        <div className={styles.gameHeader}>\n                <span>Runde {props.game.round + 1} / {props.game.rounds.length}</span>\n                <span>Phase: {props.game.phase === \"guess\" ? \"Ansage\" : \"Spiel\"}</span>\n                <span>{props.game.rounds[props.game.round]} {props.game.rounds[props.game.round] > 1 ? \"Karten\" : \"Karte\"}</span>\n        </div>\n        <div className={styles.gameProgress}>\n            {props.game.rounds.map((r, round) => <span data-past={props.game.round > round}\n                                                       data-current={props.game.round == round}>{r}</span>)}\n        </div>\n    </div> : <div className={styles.gameHeader}>Game Over.</div>\n}\n\nconst Error = props => {\n    return <div className={styles.gameError}>\n        {props.children}\n    </div>\n}","import logo from './logo.svg';\nimport './App.css';\nimport {Player} from \"./components/Player\";\nimport {Game} from \"./components/Game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}